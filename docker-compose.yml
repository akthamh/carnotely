name: car-notely

services:
  mongo:
    image: mongo:7
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet --eval 'db.adminCommand({ ping: 1 })' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks: [app]

  backend:
    build: ./backend
    restart: unless-stopped
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 8000
      # Mongo connects to the "mongo" service inside the compose network
      MONGO_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/?authSource=admin
      DB_NAME: ${DB_NAME}
      # CORS allow-list (frontend origin)
      ALLOWED_ORIGINS: ${FRONTEND_ORIGIN}
      # Clerk keys (set these from your Clerk project)
      CLERK_SECRET_KEY: ${CLERK_SECRET_KEY}
      CLERK_PUBLISHABLE_KEY: ${CLERK_PUBLISHABLE_KEY}
    networks: [app]

  frontend:
    build: ./frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "80:80"     # expose the SPA + proxy on host port 80
    networks: [app]

volumes:
  mongo-data:

networks:
  app:
